%% This file is provided to you under the Apache License,
%% Version 2.0 (the "License"); you may not use this file
%% except in compliance with the License.  You may obtain
%% a copy of the License at
%%
%%   http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing,
%% software distributed under the License is distributed on an
%% "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
%% KIND, either express or implied.  See the License for the
%% specific language governing permissions and limitations
%% under the License.

{application, eganglia,
 [
  {description, "Ganglia Monitoring System for Erlang"},
  {vsn, "0.9.1"},
  {registered, []},
  {applications, [kernel, stdlib]},
  {mod, {eganglia, []}},
  {env, [{groups, [{{local, basics}, 30, [{process_count, system_info_metric, process_count, [{type, uint32}]},
                                          {run_queue, statistics_metric, run_queue, [{type, uint32}]},
                                          {reductions, statistics_metric, reductions, [{type, uint32}]},
                                          {uptime_metric, []}]},
                   {{local, memory}, 30, [{memory_system, memory_metric, system, [{type, uint32}]},
                                          {memory_atom, memory_metric, atom, [{type, uint32}]},
                                          {memory_atom_used, memory_metric, atom_used, [{type, uint32}]},
                                          {memory_binary, memory_metric, binary, [{type, uint32}]},
                                          {memory_code, memory_metric, code, [{type, uint32}]},
                                          {memory_ets, memory_metric, ets, [{type, uint32}]},
                                          {memory_processes, memory_metric, processes, [{type, uint32}]},
                                          {memory_processes_used, memory_metric, processes_used, [{type, uint32}]}                                         
                                         ]},
                   {{local, processes}, 30, [{process_avg_queue_len, process_info_metric, {avg, message_queue_len}, [{type, double}]},
                                             {process_max_queue_len, process_info_metric, {max, message_queue_len}, [{type, double}]},
                                             {process_avg_heap_size, process_info_metric, {avg, heap_size}, [{type, double}]},
                                             {process_max_heap_size, process_info_metric, {max, heap_size}, [{type, double}]},
                                             {process_avg_stack_size, process_info_metric, {avg, stack_size}, [{type, double}]},
                                             {process_max_stack_size, process_info_metric, {max, stack_size}, [{type, double}]},
                                             {process_avg_memory_size, process_info_metric, {avg, memory}, [{type, double}]},
                                             {process_max_memory_size, process_info_metric, {max, memory}, [{type, double}]}
                                            ]},
                   {{local, constants}, once, 3600, [{otp_release, system_info_metric, otp_release}]}
                  ]}
        ]}
 ]}.